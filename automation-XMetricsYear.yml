args:
- description: The XSOAR list with stored metrics.
  name: listname
  required: true
commonfields:
  id: XMetricsYear
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.10.0
    itemVersion: 2.0.2
    packID: CommunityCommonDashboards
    packName: Community Common Dashboards
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.13.89009
enabled: true
engineinfo: {}
mainengineinfo: {}
name: XMetricsYear
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('XMetricsYear', 'start', __line__())
  ### pack version: 2.0.2




  def LoadList(listname: str) -> dict:
      results = demisto.executeCommand("getList", {'listName': listname})[0]['Contents']
      fields = {}
      if "Item not found" not in results and (results is not None or results != ""):
          if results != "":
              fields = json.loads(results)
      return (fields)


  def main():
      try:
          metricslist = demisto.args()["listname"]
          metrics = LoadList(metricslist)
          if metrics:
              return_results("# " + json.dumps(int(metrics.get("YEAR", ""))))
          else:
              return_results("# No Data for Last Year")
      except Exception as ex:
          demisto.error(traceback.format_exc())  # print the traceback
          return_error(f"XMetricsYear - exception failed to execute. Error: {str(ex)}")


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('XMetricsYear', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- widget
timeout: 300ns
type: python
