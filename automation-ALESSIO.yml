args:
- name: data
commonfields:
  id: d1160807-7886-4871-866b-d96ab77d409b
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.10.13.84405
enabled: true
engineinfo: {}
mainengineinfo: {}
name: ALESSIO
outputs:
- {}
pswd: ""
runas: DBotWeakRole
runonce: false
script: |+
  """Base Script for Cortex XSOAR (aka Demisto)
  This is an empty script with some basic structure according
  to the code conventions.
  MAKE SURE YOU REVIEW/REPLACE ALL THE COMMENTS MARKED AS "TODO"
  Developer Documentation: https://xsoar.pan.dev/docs/welcome
  Code Conventions: https://xsoar.pan.dev/docs/integrations/code-conventions
  Linting: https://xsoar.pan.dev/docs/integrations/linting
  """

  from typing import Dict, Any
  import traceback

  def main():
      try:
          # TODO: replace the invoked command function with yours
          args=demisto.args()
          data= args.get('data','')
          demisto.info(str((data)))



          #output = {"dict": risultato}
          #fine = CommandResults(outputs_prefix="getMalwareBazar_automation", outputs=output)
          return_results("ok")
      except Exception as ex:
          demisto.error(traceback.format_exc())  # print the traceback
          return_error(f'Failed to execute BaseScript. Error: {str(ex)}')


  ''' ENTRY POINT '''


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

scripttarget: 0
sourcescripid: 79ce8bcc-993a-4933-872c-a1ddb385c071
subtype: python3
tags: []
type: python
