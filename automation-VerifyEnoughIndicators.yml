args:
- description: Query used to check if there're are enough indicators in XSOAR.
  name: query
  required: true
- description: Target amount of indicators to check for.
  name: size
  required: true
comment: Returns, whether there're, are enough indicators in the system.
commonfields:
  id: VerifyEnoughIndicators
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.0.0
    itemVersion: 1.3.8
    packID: DeveloperTools
    packName: Developer Tools
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.12.63474
enabled: true
engineinfo: {}
mainengineinfo: {}
name: VerifyEnoughIndicators
outputs:
- contextPath: IndicatorsCheck.Size
  description: Number of indicators in XSOAR that're expected to match the query.
  type: number
- contextPath: IndicatorsCheck.ConditionMet
  description: Are there enough indicators in XSOAR that match the query.
  type: boolean
- contextPath: IndicatorsCheck.Query
  description: Indicators query used to check if the condition is met.
  type: boolean
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('VerifyEnoughIndicators', 'start', __line__())
  ### pack version: 1.3.8




  def main():
      args = demisto.args()
      query = args.get('query')
      size = int(args.get('size'))
      query_result = demisto.searchIndicators(query=query, size=1, page=0)
      total = query_result.get('total', 0)
      outputs = {
          'Query': query,
          'Size': total,
          'ConditionMet': total >= size
      }
      return_results(CommandResults(outputs=outputs, outputs_key_field='Query', outputs_prefix='IndicatorsCheck'))


  if __name__ in ['__main__', 'builtin', 'builtins']:
      main()

  register_module_line('VerifyEnoughIndicators', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags: []
type: python
